%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Samuel Marsh at 2015-05-28 20:13:29 +0800 


%% Saved with string encoding Unicode (UTF-8) 



@article{bayer,
	Author = {Bayer, Rudolf},
	Date-Added = {2015-05-28 12:13:19 +0000},
	Date-Modified = {2015-05-28 12:13:29 +0000},
	Doi = {10.1007/BF00289509},
	Issn = {0001-5903},
	Journal = {Acta Informatica},
	Language = {English},
	Number = {4},
	Pages = {290-306},
	Publisher = {Springer-Verlag},
	Title = {Symmetric binary B-Trees: Data structure and maintenance algorithms},
	Url = {http://dx.doi.org/10.1007/BF00289509},
	Volume = {1},
	Year = {1972},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/BF00289509}}

@webpage{stackoverflow,
	Author = {Vasya Novikov},
	Date-Added = {2015-05-26 12:57:06 +0000},
	Date-Modified = {2015-05-26 12:59:09 +0000},
	Lastchecked = {26/05/2015},
	Month = {09},
	Title = {Print a [large] tree by lines.},
	Url = {http://stackoverflow.com/questions/4965335/how-to-print-binary-tree-diagram/8948691#8948691},
	Year = {2014},
	Bdsk-Url-1 = {http://stackoverflow.com/questions/4965335/how-to-print-binary-tree-diagram/8948691#8948691}}

@book{clrs,
	Author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
	Isbn = {0262033844, 9780262033848},
	Publisher = {The MIT Press},
	Title = {Introduction to Algorithms, Third Edition},
	Type = {Book},
	Year = {2009}}

@article{trie,
	Abstract = {A new data structure called the q-fast trie is introduced. Given a set of N records whose keys are distinct nonnegative integers less than some initially specified bound M, a q-fast trie uses space O(N) and time O(âˆšlog M) for insertions, deletions, and all the retrieval operations commonly associated with binary trees. A simpler but less space efficient data structure called the p-fast trie is defined. },
	Author = {Dan E. Willard},
	Doi = {http://dx.doi.org/10.1016/0022-0000(84)90020-5},
	Issn = {0022-0000},
	Journal = {Journal of Computer and System Sciences},
	Number = {3},
	Pages = {379 - 394},
	Title = {New trie data structures which support very fast search operations},
	Url = {http://www.sciencedirect.com/science/article/pii/0022000084900205},
	Volume = {28},
	Year = {1984},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/0022000084900205},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/0022-0000(84)90020-5}}

@article{stratified,
	Abstract = {In this paper we show how to implement bounded ordered dictionaries, also called bounded priority queues, in O(log log N) time per operation and O(n) space. Here n denotes the number of elements stored in the dictionary and N denotes the size of the universe. Previously, this time bound required O(N) space. },
	Author = {Kurt Mehlhorn and Stefan N{\"a}her},
	Doi = {http://dx.doi.org/10.1016/0020-0190(90)90022-P},
	Issn = {0020-0190},
	Journal = {Information Processing Letters},
	Keywords = {search tree},
	Number = {4},
	Pages = {183 - 189},
	Title = {Bounded ordered dictionaries in O(log log N) time and O(n) space},
	Url = {http://www.sciencedirect.com/science/article/pii/002001909090022P},
	Volume = {35},
	Year = {1990},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/002001909090022P},
	Bdsk-Url-2 = {http://dx.doi.org/10.1016/0020-0190(90)90022-P}}
